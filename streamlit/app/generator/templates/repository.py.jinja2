from sqlalchemy.orm import Session
from src.{{package}}.model import {{ name }}


class {{ name }}Repository:
    def __init__(self, db: Session):
        self.db = db

    def get_all(self):
        return self.db.query({{ name }}).all()

    def get_by_id(self, id: str):
        return self.db.query({{ name }}).filter({{ name }}.id == id).first()

    def create(self, entity: {{ name }}):
        self.db.add(entity)
        self.db.commit()
        self.db.refresh(entity)
        return entity

    def update(self, id: str, updates: dict):
        entity = self.get_by_id(id)
        if entity:
            for key, value in updates.items():
                setattr(entity, key, value)
            self.db.commit()
            return entity
        return None

    def delete(self, id: str):
        entity = self.get_by_id(id)
        if entity:
            self.db.delete(entity)
            self.db.commit()
        return entity
